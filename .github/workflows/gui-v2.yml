name: Gui V2

# Triggered after a branch is created, a tag or a branch is pushed or a PR with changes in
on:
  create:
  push:
  pull_request:

jobs:
  unit-tests:
    name: Unit Tests
    # If the commit message contains 'ci skip', it is not necessary to run this job
    if: contains(github.event.head_commit.message, 'ci skip') == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:

    - name: checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: yarn install, build, lint and test
      run: |
        yarn install
        yarn run build
        yarn run lint
        yarn run test:coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        # Created when 'npm test' was executed
        file: test/unit/coverage/lcov.info # create when run npm test
        # Flags allow you to isolate coverage reports for different tests
        flags: guiV2
        # Custom name for the upload
        name: gui-v2
               
  docker-hub:
    # Path to help identify each job in the status checks
    name:  Build and Publish image to DockerHUb
    runs-on: ubuntu-latest
    # If this is a PR, it won't run
    if: contains(github.ref, 'refs/pull/') == false
    steps:

    - name: Owner Repository
      id: get_owner
      run: |
        export OWNER=$(echo ${{ github.repository }} | cut -f1 -d"/")
        echo Current Owner is $OWNER
        echo ::set-output name=owner::$OWNER
    - name: Checkout
      uses: actions/checkout@v1
    - name: Release Version
      id: release_version
      env:
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
      run: |
          export RELEASE_VERSION=$(sh .github/workflows/translate_version.sh)
          echo Version $RELEASE_VERSION
          echo ::set-output name=version::$RELEASE_VERSION
    - name: Build and Push
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ steps.get_owner.outputs.owner }}/gui-v2
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        # Label with the built image's commit
        buildoptions: " --label 'commit_sha'='${{ github.sha }}' --build-arg DOJOT_VERSION=${{ steps.release_version.outputs.version }}"
        # Whether tag will be based in the branch name or in the tag name
        tag_names: true
